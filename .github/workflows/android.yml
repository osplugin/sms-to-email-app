name: Android Sign and Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup signing
        env:
          STORE_FILE: keystore.jks
          STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > $STORE_FILE
          chmod 600 $STORE_FILE

      - name: Build signed APK
        env:
          STORE_FILE: keystore.jks
          STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease

      - name: Find signed APK
        id: find-apk
        run: |
          APK_PATH=$(find app/build/outputs/apk/ -name "*.apk" ! -name "*unsigned*" | head -n 1)
          echo "apk_path=${APK_PATH}" >> $GITHUB_OUTPUT

      - name: Upload APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.find-apk.outputs.apk_path }}
          asset_name: sms-to-email-app-${{ steps.extract-version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive
        
      - name: Clean up
        if: always()
        run: |
          rm -f keystore.jks
          rm -f gradle.properties
